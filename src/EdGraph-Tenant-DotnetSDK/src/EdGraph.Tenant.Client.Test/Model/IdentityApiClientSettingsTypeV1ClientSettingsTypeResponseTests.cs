/*
 * Tenant Api
 *
 * Tenant Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EdGraph.Tenant.Client.Model;
using EdGraph.Tenant.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EdGraph.Tenant.Client.Test.Model
{
    /// <summary>
    ///  Class for testing IdentityApiClientSettingsTypeV1ClientSettingsTypeResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IdentityApiClientSettingsTypeV1ClientSettingsTypeResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IdentityApiClientSettingsTypeV1ClientSettingsTypeResponse
        //private IdentityApiClientSettingsTypeV1ClientSettingsTypeResponse instance;

        public IdentityApiClientSettingsTypeV1ClientSettingsTypeResponseTests()
        {
            // TODO uncomment below to create an instance of IdentityApiClientSettingsTypeV1ClientSettingsTypeResponse
            //instance = new IdentityApiClientSettingsTypeV1ClientSettingsTypeResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IdentityApiClientSettingsTypeV1ClientSettingsTypeResponse
        /// </summary>
        [Fact]
        public void IdentityApiClientSettingsTypeV1ClientSettingsTypeResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" IdentityApiClientSettingsTypeV1ClientSettingsTypeResponse
            //Assert.IsType<IdentityApiClientSettingsTypeV1ClientSettingsTypeResponse>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'ClientId'
        /// </summary>
        [Fact]
        public void ClientIdTest()
        {
            // TODO unit test for the property 'ClientId'
        }
        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }
        /// <summary>
        /// Test the property 'DataType'
        /// </summary>
        [Fact]
        public void DataTypeTest()
        {
            // TODO unit test for the property 'DataType'
        }
        /// <summary>
        /// Test the property 'Order'
        /// </summary>
        [Fact]
        public void OrderTest()
        {
            // TODO unit test for the property 'Order'
        }
        /// <summary>
        /// Test the property 'Hidden'
        /// </summary>
        [Fact]
        public void HiddenTest()
        {
            // TODO unit test for the property 'Hidden'
        }
        /// <summary>
        /// Test the property 'HtmlElement'
        /// </summary>
        [Fact]
        public void HtmlElementTest()
        {
            // TODO unit test for the property 'HtmlElement'
        }
        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Fact]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
        /// <summary>
        /// Test the property 'InputType'
        /// </summary>
        [Fact]
        public void InputTypeTest()
        {
            // TODO unit test for the property 'InputType'
        }
        /// <summary>
        /// Test the property 'DefaultValue'
        /// </summary>
        [Fact]
        public void DefaultValueTest()
        {
            // TODO unit test for the property 'DefaultValue'
        }
        /// <summary>
        /// Test the property 'MinValue'
        /// </summary>
        [Fact]
        public void MinValueTest()
        {
            // TODO unit test for the property 'MinValue'
        }
        /// <summary>
        /// Test the property 'MaxValue'
        /// </summary>
        [Fact]
        public void MaxValueTest()
        {
            // TODO unit test for the property 'MaxValue'
        }
        /// <summary>
        /// Test the property 'MaxLength'
        /// </summary>
        [Fact]
        public void MaxLengthTest()
        {
            // TODO unit test for the property 'MaxLength'
        }
        /// <summary>
        /// Test the property 'Options'
        /// </summary>
        [Fact]
        public void OptionsTest()
        {
            // TODO unit test for the property 'Options'
        }
        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }
        /// <summary>
        /// Test the property 'CreatedDateTime'
        /// </summary>
        [Fact]
        public void CreatedDateTimeTest()
        {
            // TODO unit test for the property 'CreatedDateTime'
        }
        /// <summary>
        /// Test the property 'LastModifiedBy'
        /// </summary>
        [Fact]
        public void LastModifiedByTest()
        {
            // TODO unit test for the property 'LastModifiedBy'
        }
        /// <summary>
        /// Test the property 'LastModifiedDateTime'
        /// </summary>
        [Fact]
        public void LastModifiedDateTimeTest()
        {
            // TODO unit test for the property 'LastModifiedDateTime'
        }

    }

}
