/*
 * Tenant Api
 *
 * Tenant Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EdGraph.Tenant.Client.Model;
using EdGraph.Tenant.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EdGraph.Tenant.Client.Test.Model
{
    /// <summary>
    ///  Class for testing TenantApiPartnershipV1PartnershipResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TenantApiPartnershipV1PartnershipResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TenantApiPartnershipV1PartnershipResponse
        //private TenantApiPartnershipV1PartnershipResponse instance;

        public TenantApiPartnershipV1PartnershipResponseTests()
        {
            // TODO uncomment below to create an instance of TenantApiPartnershipV1PartnershipResponse
            //instance = new TenantApiPartnershipV1PartnershipResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TenantApiPartnershipV1PartnershipResponse
        /// </summary>
        [Fact]
        public void TenantApiPartnershipV1PartnershipResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" TenantApiPartnershipV1PartnershipResponse
            //Assert.IsType<TenantApiPartnershipV1PartnershipResponse>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'PartnerTenant'
        /// </summary>
        [Fact]
        public void PartnerTenantTest()
        {
            // TODO unit test for the property 'PartnerTenant'
        }

        /// <summary>
        /// Test the property 'PartnershipType'
        /// </summary>
        [Fact]
        public void PartnershipTypeTest()
        {
            // TODO unit test for the property 'PartnershipType'
        }

        /// <summary>
        /// Test the property 'RelatedTenants'
        /// </summary>
        [Fact]
        public void RelatedTenantsTest()
        {
            // TODO unit test for the property 'RelatedTenants'
        }

        /// <summary>
        /// Test the property 'PartnershipSync'
        /// </summary>
        [Fact]
        public void PartnershipSyncTest()
        {
            // TODO unit test for the property 'PartnershipSync'
        }

        /// <summary>
        /// Test the property 'CreatedDateTime'
        /// </summary>
        [Fact]
        public void CreatedDateTimeTest()
        {
            // TODO unit test for the property 'CreatedDateTime'
        }

        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }

        /// <summary>
        /// Test the property 'LastModifiedDateTime'
        /// </summary>
        [Fact]
        public void LastModifiedDateTimeTest()
        {
            // TODO unit test for the property 'LastModifiedDateTime'
        }

        /// <summary>
        /// Test the property 'LastModifiedBy'
        /// </summary>
        [Fact]
        public void LastModifiedByTest()
        {
            // TODO unit test for the property 'LastModifiedBy'
        }
    }
}
