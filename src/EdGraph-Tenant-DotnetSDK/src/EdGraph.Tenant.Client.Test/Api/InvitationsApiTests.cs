/*
 * Tenant Api
 *
 * Tenant Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EdGraph.Tenant.Client.Client;
using EdGraph.Tenant.Client.Api;
// uncomment below to import models
//using EdGraph.Tenant.Client.Model;

namespace EdGraph.Tenant.Client.Test.Api
{
    /// <summary>
    ///  Class for testing InvitationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InvitationsApiTests : IDisposable
    {
        private InvitationsApi instance;

        public InvitationsApiTests()
        {
            instance = new InvitationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InvitationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InvitationsApi
            //Assert.IsType<InvitationsApi>(instance);
        }

        /// <summary>
        /// Test DeleteTenantInvitation
        /// </summary>
        [Fact]
        public void DeleteTenantInvitationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string invitationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //instance.DeleteTenantInvitation(tenantId, invitationId, apiVersion, xVersion);
        }

        /// <summary>
        /// Test GetAllTenantInvitations
        /// </summary>
        [Fact]
        public void GetAllTenantInvitationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //int? pageSize = null;
            //int? pageIndex = null;
            //string? orderBy = null;
            //string? filter = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetAllTenantInvitations(tenantId, pageSize, pageIndex, orderBy, filter, apiVersion, xVersion);
            //Assert.IsType<IdentityApiInvitationV1InvitationListResponsePaginatedItemsViewModel>(response);
        }

        /// <summary>
        /// Test GetTenantInvitationById
        /// </summary>
        [Fact]
        public void GetTenantInvitationByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string invitationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetTenantInvitationById(tenantId, invitationId, apiVersion, xVersion);
            //Assert.IsType<IdentityApiInvitationV1InvitationResponse>(response);
        }

        /// <summary>
        /// Test SendTenantInvitation
        /// </summary>
        [Fact]
        public void SendTenantInvitationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //IdentityApiInvitationV1SendInvitationRequest? identityApiInvitationV1SendInvitationRequest = null;
            //instance.SendTenantInvitation(tenantId, apiVersion, xVersion, identityApiInvitationV1SendInvitationRequest);
        }
    }
}
