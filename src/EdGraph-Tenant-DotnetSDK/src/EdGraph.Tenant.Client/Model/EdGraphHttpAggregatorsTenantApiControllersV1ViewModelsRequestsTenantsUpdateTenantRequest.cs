/*
 * Tenant Api
 *
 * Tenant Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.Tenant.Client.Client.OpenAPIDateConverter;

namespace EdGraph.Tenant.Client.Model
{
    /// <summary>
    /// EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsUpdateTenantRequest
    /// </summary>
    [DataContract(Name = "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest")]
    public partial class EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsUpdateTenantRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets TenantStatus
        /// </summary>
        [DataMember(Name = "tenantStatus", EmitDefaultValue = false)]
        public EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantStatus? TenantStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsUpdateTenantRequest" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId.</param>
        /// <param name="tenantTypes">tenantTypes.</param>
        /// <param name="organizationIdentifier">organizationIdentifier.</param>
        /// <param name="organizationName">organizationName.</param>
        /// <param name="state">state.</param>
        /// <param name="isDemo">isDemo.</param>
        /// <param name="additionalSettings">additionalSettings.</param>
        /// <param name="identityProviders">identityProviders.</param>
        /// <param name="tenantStatus">tenantStatus.</param>
        /// <param name="settings">settings.</param>
        public EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsUpdateTenantRequest(string tenantId = default(string), List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantType> tenantTypes = default(List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantType>), string organizationIdentifier = default(string), string organizationName = default(string), string state = default(string), bool isDemo = default(bool), EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantAdditionalSetting additionalSettings = default(EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantAdditionalSetting), List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantIdentityProviders> identityProviders = default(List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantIdentityProviders>), EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantStatus? tenantStatus = default(EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantStatus?), List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantSetting> settings = default(List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantSetting>))
        {
            this.TenantId = tenantId;
            this.TenantTypes = tenantTypes;
            this.OrganizationIdentifier = organizationIdentifier;
            this.OrganizationName = organizationName;
            this.State = state;
            this.IsDemo = isDemo;
            this.AdditionalSettings = additionalSettings;
            this.IdentityProviders = identityProviders;
            this.TenantStatus = tenantStatus;
            this.Settings = settings;
        }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name = "tenantId", EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets TenantTypes
        /// </summary>
        [DataMember(Name = "tenantTypes", EmitDefaultValue = true)]
        public List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantType> TenantTypes { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationIdentifier
        /// </summary>
        [DataMember(Name = "organizationIdentifier", EmitDefaultValue = true)]
        public string OrganizationIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationName
        /// </summary>
        [DataMember(Name = "organizationName", EmitDefaultValue = true)]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = true)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets IsDemo
        /// </summary>
        [DataMember(Name = "isDemo", EmitDefaultValue = true)]
        public bool IsDemo { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalSettings
        /// </summary>
        [DataMember(Name = "additionalSettings", EmitDefaultValue = false)]
        public EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantAdditionalSetting AdditionalSettings { get; set; }

        /// <summary>
        /// Gets or Sets IdentityProviders
        /// </summary>
        [DataMember(Name = "identityProviders", EmitDefaultValue = true)]
        public List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantIdentityProviders> IdentityProviders { get; set; }

        /// <summary>
        /// Gets or Sets Settings
        /// </summary>
        [DataMember(Name = "settings", EmitDefaultValue = true)]
        public List<EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsTenantSetting> Settings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdGraphHttpAggregatorsTenantApiControllersV1ViewModelsRequestsTenantsUpdateTenantRequest {\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  TenantTypes: ").Append(TenantTypes).Append("\n");
            sb.Append("  OrganizationIdentifier: ").Append(OrganizationIdentifier).Append("\n");
            sb.Append("  OrganizationName: ").Append(OrganizationName).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  IsDemo: ").Append(IsDemo).Append("\n");
            sb.Append("  AdditionalSettings: ").Append(AdditionalSettings).Append("\n");
            sb.Append("  IdentityProviders: ").Append(IdentityProviders).Append("\n");
            sb.Append("  TenantStatus: ").Append(TenantStatus).Append("\n");
            sb.Append("  Settings: ").Append(Settings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
