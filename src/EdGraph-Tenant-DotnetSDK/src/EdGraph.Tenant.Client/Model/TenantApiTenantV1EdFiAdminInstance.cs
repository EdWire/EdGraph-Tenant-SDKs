/*
 * Tenant Api
 *
 * Tenant Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.Tenant.Client.Client.OpenAPIDateConverter;

namespace EdGraph.Tenant.Client.Model
{
    /// <summary>
    /// TenantApiTenantV1EdFiAdminInstance
    /// </summary>
    [DataContract(Name = "TenantApi.Tenant.V1.EdFiAdminInstance")]
    public partial class TenantApiTenantV1EdFiAdminInstance : IEquatable<TenantApiTenantV1EdFiAdminInstance>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TenantApiTenantV1EdFiAdminInstance" /> class.
        /// </summary>
        /// <param name="id">Details.</param>
        /// <param name="instanceName">instanceName.</param>
        /// <param name="useCustomId">useCustomId.</param>
        /// <param name="customId">customId.</param>
        /// <param name="description">description.</param>
        /// <param name="connectionName">connectionName.</param>
        /// <param name="selectedConnectionId">Connection.</param>
        /// <param name="databases">databases.</param>
        /// <param name="password">API Client.</param>
        /// <param name="apiClientKey">apiClientKey.</param>
        /// <param name="apiClientSecret">apiClientSecret.</param>
        /// <param name="isApiClientSecretSecured">isApiClientSecretSecured.</param>
        /// <param name="tenantId">Metadata.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="createdDateTime">createdDateTime.</param>
        /// <param name="isDeleted">isDeleted.</param>
        /// <param name="lastModifiedBy">lastModifiedBy.</param>
        /// <param name="lastModifiedDateTime">lastModifiedDateTime.</param>
        /// <param name="apiAuthUrl">URLs.</param>
        public TenantApiTenantV1EdFiAdminInstance(string id = default(string), string instanceName = default(string), bool useCustomId = default(bool), string customId = default(string), string description = default(string), string connectionName = default(string), string selectedConnectionId = default(string), TenantApiTenantV1InstanceDatabases databases = default(TenantApiTenantV1InstanceDatabases), string password = default(string), string apiClientKey = default(string), string apiClientSecret = default(string), bool isApiClientSecretSecured = default(bool), string tenantId = default(string), string createdBy = default(string), string createdDateTime = default(string), bool isDeleted = default(bool), string lastModifiedBy = default(string), string lastModifiedDateTime = default(string), string apiAuthUrl = default(string))
        {
            this.Id = id;
            this.InstanceName = instanceName;
            this.UseCustomId = useCustomId;
            this.CustomId = customId;
            this.Description = description;
            this.ConnectionName = connectionName;
            this.SelectedConnectionId = selectedConnectionId;
            this.Databases = databases;
            this.Password = password;
            this.ApiClientKey = apiClientKey;
            this.ApiClientSecret = apiClientSecret;
            this.IsApiClientSecretSecured = isApiClientSecretSecured;
            this.TenantId = tenantId;
            this.CreatedBy = createdBy;
            this.CreatedDateTime = createdDateTime;
            this.IsDeleted = isDeleted;
            this.LastModifiedBy = lastModifiedBy;
            this.LastModifiedDateTime = lastModifiedDateTime;
            this.ApiAuthUrl = apiAuthUrl;
        }

        /// <summary>
        /// Details
        /// </summary>
        /// <value>Details</value>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets InstanceName
        /// </summary>
        [DataMember(Name = "instanceName", EmitDefaultValue = true)]
        public string InstanceName { get; set; }

        /// <summary>
        /// Gets or Sets UseCustomId
        /// </summary>
        [DataMember(Name = "useCustomId", EmitDefaultValue = true)]
        public bool UseCustomId { get; set; }

        /// <summary>
        /// Gets or Sets CustomId
        /// </summary>
        [DataMember(Name = "customId", EmitDefaultValue = true)]
        public string CustomId { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ConnectionName
        /// </summary>
        [DataMember(Name = "connectionName", EmitDefaultValue = true)]
        public string ConnectionName { get; set; }

        /// <summary>
        /// Connection
        /// </summary>
        /// <value>Connection</value>
        [DataMember(Name = "selectedConnectionId", EmitDefaultValue = true)]
        public string SelectedConnectionId { get; set; }

        /// <summary>
        /// Gets or Sets Databases
        /// </summary>
        [DataMember(Name = "databases", EmitDefaultValue = false)]
        public TenantApiTenantV1InstanceDatabases Databases { get; set; }

        /// <summary>
        /// API Client
        /// </summary>
        /// <value>API Client</value>
        [DataMember(Name = "password", EmitDefaultValue = true)]
        public string Password { get; set; }

        /// <summary>
        /// Gets or Sets ApiClientKey
        /// </summary>
        [DataMember(Name = "apiClientKey", EmitDefaultValue = true)]
        public string ApiClientKey { get; set; }

        /// <summary>
        /// Gets or Sets ApiClientSecret
        /// </summary>
        [DataMember(Name = "apiClientSecret", EmitDefaultValue = true)]
        public string ApiClientSecret { get; set; }

        /// <summary>
        /// Gets or Sets IsApiClientSecretSecured
        /// </summary>
        [DataMember(Name = "isApiClientSecretSecured", EmitDefaultValue = true)]
        public bool IsApiClientSecretSecured { get; set; }

        /// <summary>
        /// Metadata
        /// </summary>
        /// <value>Metadata</value>
        [DataMember(Name = "tenantId", EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", EmitDefaultValue = true)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDateTime
        /// </summary>
        [DataMember(Name = "createdDateTime", EmitDefaultValue = true)]
        public string CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets IsDeleted
        /// </summary>
        [DataMember(Name = "isDeleted", EmitDefaultValue = true)]
        public bool IsDeleted { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedBy
        /// </summary>
        [DataMember(Name = "lastModifiedBy", EmitDefaultValue = true)]
        public string LastModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedDateTime
        /// </summary>
        [DataMember(Name = "lastModifiedDateTime", EmitDefaultValue = true)]
        public string LastModifiedDateTime { get; set; }

        /// <summary>
        /// URLs
        /// </summary>
        /// <value>URLs</value>
        [DataMember(Name = "apiAuthUrl", EmitDefaultValue = true)]
        public string ApiAuthUrl { get; set; }

        /// <summary>
        /// Gets or Sets ApiResourcesUrls
        /// </summary>
        [DataMember(Name = "apiResourcesUrls", EmitDefaultValue = true)]
        public List<string> ApiResourcesUrls { get; private set; }

        /// <summary>
        /// Returns false as ApiResourcesUrls should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeApiResourcesUrls()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets ApiCompositesUrls
        /// </summary>
        [DataMember(Name = "apiCompositesUrls", EmitDefaultValue = true)]
        public List<string> ApiCompositesUrls { get; private set; }

        /// <summary>
        /// Returns false as ApiCompositesUrls should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeApiCompositesUrls()
        {
            return false;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TenantApiTenantV1EdFiAdminInstance {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  InstanceName: ").Append(InstanceName).Append("\n");
            sb.Append("  UseCustomId: ").Append(UseCustomId).Append("\n");
            sb.Append("  CustomId: ").Append(CustomId).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ConnectionName: ").Append(ConnectionName).Append("\n");
            sb.Append("  SelectedConnectionId: ").Append(SelectedConnectionId).Append("\n");
            sb.Append("  Databases: ").Append(Databases).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("  ApiClientKey: ").Append(ApiClientKey).Append("\n");
            sb.Append("  ApiClientSecret: ").Append(ApiClientSecret).Append("\n");
            sb.Append("  IsApiClientSecretSecured: ").Append(IsApiClientSecretSecured).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  CreatedDateTime: ").Append(CreatedDateTime).Append("\n");
            sb.Append("  IsDeleted: ").Append(IsDeleted).Append("\n");
            sb.Append("  LastModifiedBy: ").Append(LastModifiedBy).Append("\n");
            sb.Append("  LastModifiedDateTime: ").Append(LastModifiedDateTime).Append("\n");
            sb.Append("  ApiAuthUrl: ").Append(ApiAuthUrl).Append("\n");
            sb.Append("  ApiResourcesUrls: ").Append(ApiResourcesUrls).Append("\n");
            sb.Append("  ApiCompositesUrls: ").Append(ApiCompositesUrls).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TenantApiTenantV1EdFiAdminInstance);
        }

        /// <summary>
        /// Returns true if TenantApiTenantV1EdFiAdminInstance instances are equal
        /// </summary>
        /// <param name="input">Instance of TenantApiTenantV1EdFiAdminInstance to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TenantApiTenantV1EdFiAdminInstance input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.InstanceName == input.InstanceName ||
                    (this.InstanceName != null &&
                    this.InstanceName.Equals(input.InstanceName))
                ) && 
                (
                    this.UseCustomId == input.UseCustomId ||
                    this.UseCustomId.Equals(input.UseCustomId)
                ) && 
                (
                    this.CustomId == input.CustomId ||
                    (this.CustomId != null &&
                    this.CustomId.Equals(input.CustomId))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ConnectionName == input.ConnectionName ||
                    (this.ConnectionName != null &&
                    this.ConnectionName.Equals(input.ConnectionName))
                ) && 
                (
                    this.SelectedConnectionId == input.SelectedConnectionId ||
                    (this.SelectedConnectionId != null &&
                    this.SelectedConnectionId.Equals(input.SelectedConnectionId))
                ) && 
                (
                    this.Databases == input.Databases ||
                    (this.Databases != null &&
                    this.Databases.Equals(input.Databases))
                ) && 
                (
                    this.Password == input.Password ||
                    (this.Password != null &&
                    this.Password.Equals(input.Password))
                ) && 
                (
                    this.ApiClientKey == input.ApiClientKey ||
                    (this.ApiClientKey != null &&
                    this.ApiClientKey.Equals(input.ApiClientKey))
                ) && 
                (
                    this.ApiClientSecret == input.ApiClientSecret ||
                    (this.ApiClientSecret != null &&
                    this.ApiClientSecret.Equals(input.ApiClientSecret))
                ) && 
                (
                    this.IsApiClientSecretSecured == input.IsApiClientSecretSecured ||
                    this.IsApiClientSecretSecured.Equals(input.IsApiClientSecretSecured)
                ) && 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                ) && 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.CreatedDateTime == input.CreatedDateTime ||
                    (this.CreatedDateTime != null &&
                    this.CreatedDateTime.Equals(input.CreatedDateTime))
                ) && 
                (
                    this.IsDeleted == input.IsDeleted ||
                    this.IsDeleted.Equals(input.IsDeleted)
                ) && 
                (
                    this.LastModifiedBy == input.LastModifiedBy ||
                    (this.LastModifiedBy != null &&
                    this.LastModifiedBy.Equals(input.LastModifiedBy))
                ) && 
                (
                    this.LastModifiedDateTime == input.LastModifiedDateTime ||
                    (this.LastModifiedDateTime != null &&
                    this.LastModifiedDateTime.Equals(input.LastModifiedDateTime))
                ) && 
                (
                    this.ApiAuthUrl == input.ApiAuthUrl ||
                    (this.ApiAuthUrl != null &&
                    this.ApiAuthUrl.Equals(input.ApiAuthUrl))
                ) && 
                (
                    this.ApiResourcesUrls == input.ApiResourcesUrls ||
                    this.ApiResourcesUrls != null &&
                    input.ApiResourcesUrls != null &&
                    this.ApiResourcesUrls.SequenceEqual(input.ApiResourcesUrls)
                ) && 
                (
                    this.ApiCompositesUrls == input.ApiCompositesUrls ||
                    this.ApiCompositesUrls != null &&
                    input.ApiCompositesUrls != null &&
                    this.ApiCompositesUrls.SequenceEqual(input.ApiCompositesUrls)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.InstanceName != null)
                {
                    hashCode = (hashCode * 59) + this.InstanceName.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.UseCustomId.GetHashCode();
                if (this.CustomId != null)
                {
                    hashCode = (hashCode * 59) + this.CustomId.GetHashCode();
                }
                if (this.Description != null)
                {
                    hashCode = (hashCode * 59) + this.Description.GetHashCode();
                }
                if (this.ConnectionName != null)
                {
                    hashCode = (hashCode * 59) + this.ConnectionName.GetHashCode();
                }
                if (this.SelectedConnectionId != null)
                {
                    hashCode = (hashCode * 59) + this.SelectedConnectionId.GetHashCode();
                }
                if (this.Databases != null)
                {
                    hashCode = (hashCode * 59) + this.Databases.GetHashCode();
                }
                if (this.Password != null)
                {
                    hashCode = (hashCode * 59) + this.Password.GetHashCode();
                }
                if (this.ApiClientKey != null)
                {
                    hashCode = (hashCode * 59) + this.ApiClientKey.GetHashCode();
                }
                if (this.ApiClientSecret != null)
                {
                    hashCode = (hashCode * 59) + this.ApiClientSecret.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsApiClientSecretSecured.GetHashCode();
                if (this.TenantId != null)
                {
                    hashCode = (hashCode * 59) + this.TenantId.GetHashCode();
                }
                if (this.CreatedBy != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedBy.GetHashCode();
                }
                if (this.CreatedDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedDateTime.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsDeleted.GetHashCode();
                if (this.LastModifiedBy != null)
                {
                    hashCode = (hashCode * 59) + this.LastModifiedBy.GetHashCode();
                }
                if (this.LastModifiedDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.LastModifiedDateTime.GetHashCode();
                }
                if (this.ApiAuthUrl != null)
                {
                    hashCode = (hashCode * 59) + this.ApiAuthUrl.GetHashCode();
                }
                if (this.ApiResourcesUrls != null)
                {
                    hashCode = (hashCode * 59) + this.ApiResourcesUrls.GetHashCode();
                }
                if (this.ApiCompositesUrls != null)
                {
                    hashCode = (hashCode * 59) + this.ApiCompositesUrls.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
