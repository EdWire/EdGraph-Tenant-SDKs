/*
 * Tenant Api
 *
 * Tenant Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.Tenant.Client.Client.OpenAPIDateConverter;

namespace EdGraph.Tenant.Client.Model
{
    /// <summary>
    /// TenantApiPartnershipV1PartnershipByIdResponse
    /// </summary>
    [DataContract(Name = "TenantApi.Partnership.V1.PartnershipByIdResponse")]
    public partial class TenantApiPartnershipV1PartnershipByIdResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TenantApiPartnershipV1PartnershipByIdResponse" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="partnerTenantId">partnerTenantId.</param>
        /// <param name="partnershipType">partnershipType.</param>
        /// <param name="partnershipSync">partnershipSync.</param>
        /// <param name="createdDateTime">createdDateTime.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="lastModifiedDateTime">lastModifiedDateTime.</param>
        /// <param name="lastModifiedBy">lastModifiedBy.</param>
        public TenantApiPartnershipV1PartnershipByIdResponse(string id = default(string), string partnerTenantId = default(string), string partnershipType = default(string), TenantApiPartnershipV1PartnershipSyncDTO partnershipSync = default(TenantApiPartnershipV1PartnershipSyncDTO), string createdDateTime = default(string), string createdBy = default(string), string lastModifiedDateTime = default(string), string lastModifiedBy = default(string))
        {
            this.Id = id;
            this.PartnerTenantId = partnerTenantId;
            this.PartnershipType = partnershipType;
            this.PartnershipSync = partnershipSync;
            this.CreatedDateTime = createdDateTime;
            this.CreatedBy = createdBy;
            this.LastModifiedDateTime = lastModifiedDateTime;
            this.LastModifiedBy = lastModifiedBy;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets PartnerTenantId
        /// </summary>
        [DataMember(Name = "partnerTenantId", EmitDefaultValue = true)]
        public string PartnerTenantId { get; set; }

        /// <summary>
        /// Gets or Sets PartnershipType
        /// </summary>
        [DataMember(Name = "partnershipType", EmitDefaultValue = true)]
        public string PartnershipType { get; set; }

        /// <summary>
        /// Gets or Sets RelatedTenantsIds
        /// </summary>
        [DataMember(Name = "relatedTenantsIds", EmitDefaultValue = true)]
        public List<string> RelatedTenantsIds { get; private set; }

        /// <summary>
        /// Returns false as RelatedTenantsIds should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedTenantsIds()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets PartnershipSync
        /// </summary>
        [DataMember(Name = "partnershipSync", EmitDefaultValue = false)]
        public TenantApiPartnershipV1PartnershipSyncDTO PartnershipSync { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDateTime
        /// </summary>
        [DataMember(Name = "createdDateTime", EmitDefaultValue = true)]
        public string CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", EmitDefaultValue = true)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedDateTime
        /// </summary>
        [DataMember(Name = "lastModifiedDateTime", EmitDefaultValue = true)]
        public string LastModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedBy
        /// </summary>
        [DataMember(Name = "lastModifiedBy", EmitDefaultValue = true)]
        public string LastModifiedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TenantApiPartnershipV1PartnershipByIdResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PartnerTenantId: ").Append(PartnerTenantId).Append("\n");
            sb.Append("  PartnershipType: ").Append(PartnershipType).Append("\n");
            sb.Append("  RelatedTenantsIds: ").Append(RelatedTenantsIds).Append("\n");
            sb.Append("  PartnershipSync: ").Append(PartnershipSync).Append("\n");
            sb.Append("  CreatedDateTime: ").Append(CreatedDateTime).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  LastModifiedDateTime: ").Append(LastModifiedDateTime).Append("\n");
            sb.Append("  LastModifiedBy: ").Append(LastModifiedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
