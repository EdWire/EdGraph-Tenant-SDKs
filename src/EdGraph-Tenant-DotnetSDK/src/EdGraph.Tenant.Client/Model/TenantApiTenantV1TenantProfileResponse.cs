/*
 * Tenant Api
 *
 * Tenant Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.Tenant.Client.Client.OpenAPIDateConverter;

namespace EdGraph.Tenant.Client.Model
{
    /// <summary>
    /// TenantApiTenantV1TenantProfileResponse
    /// </summary>
    [DataContract(Name = "TenantApi.Tenant.V1.TenantProfileResponse")]
    public partial class TenantApiTenantV1TenantProfileResponse : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets TenantType
        /// </summary>
        [DataMember(Name = "tenantType", EmitDefaultValue = false)]
        public TenantApiTenantV1TenantType? TenantType { get; set; }

        /// <summary>
        /// Gets or Sets TenantStatus
        /// </summary>
        [DataMember(Name = "tenantStatus", EmitDefaultValue = false)]
        public TenantApiTenantV1TenantStatus? TenantStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TenantApiTenantV1TenantProfileResponse" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId.</param>
        /// <param name="tenantType">tenantType.</param>
        /// <param name="organizationIdentifier">organizationIdentifier.</param>
        /// <param name="organizationName">organizationName.</param>
        /// <param name="state">state.</param>
        /// <param name="tenantStatus">tenantStatus.</param>
        /// <param name="isDemo">isDemo.</param>
        /// <param name="enforceMfa">enforceMfa.</param>
        /// <param name="subscriptionsMigrated">subscriptionsMigrated.</param>
        /// <param name="showLocalLoginOptionToTenantAdmins">showLocalLoginOptionToTenantAdmins.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="createdDateTime">createdDateTime.</param>
        /// <param name="lastModifiedBy">lastModifiedBy.</param>
        /// <param name="lastModifiedDateTime">lastModifiedDateTime.</param>
        /// <param name="onboarding">onboarding.</param>
        /// <param name="organizationIdentifierHash">organizationIdentifierHash.</param>
        public TenantApiTenantV1TenantProfileResponse(string tenantId = default(string), TenantApiTenantV1TenantType? tenantType = default(TenantApiTenantV1TenantType?), string organizationIdentifier = default(string), string organizationName = default(string), string state = default(string), TenantApiTenantV1TenantStatus? tenantStatus = default(TenantApiTenantV1TenantStatus?), bool isDemo = default(bool), bool enforceMfa = default(bool), bool subscriptionsMigrated = default(bool), bool showLocalLoginOptionToTenantAdmins = default(bool), string createdBy = default(string), string createdDateTime = default(string), string lastModifiedBy = default(string), string lastModifiedDateTime = default(string), TenantApiTenantV1Onboarding onboarding = default(TenantApiTenantV1Onboarding), string organizationIdentifierHash = default(string))
        {
            this.TenantId = tenantId;
            this.TenantType = tenantType;
            this.OrganizationIdentifier = organizationIdentifier;
            this.OrganizationName = organizationName;
            this.State = state;
            this.TenantStatus = tenantStatus;
            this.IsDemo = isDemo;
            this.EnforceMfa = enforceMfa;
            this.SubscriptionsMigrated = subscriptionsMigrated;
            this.ShowLocalLoginOptionToTenantAdmins = showLocalLoginOptionToTenantAdmins;
            this.CreatedBy = createdBy;
            this.CreatedDateTime = createdDateTime;
            this.LastModifiedBy = lastModifiedBy;
            this.LastModifiedDateTime = lastModifiedDateTime;
            this.Onboarding = onboarding;
            this.OrganizationIdentifierHash = organizationIdentifierHash;
        }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name = "tenantId", EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationIdentifier
        /// </summary>
        [DataMember(Name = "organizationIdentifier", EmitDefaultValue = true)]
        public string OrganizationIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationName
        /// </summary>
        [DataMember(Name = "organizationName", EmitDefaultValue = true)]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = true)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets IsDemo
        /// </summary>
        [DataMember(Name = "isDemo", EmitDefaultValue = true)]
        public bool IsDemo { get; set; }

        /// <summary>
        /// Gets or Sets EnforceMfa
        /// </summary>
        [DataMember(Name = "enforceMfa", EmitDefaultValue = true)]
        public bool EnforceMfa { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionsMigrated
        /// </summary>
        [DataMember(Name = "subscriptionsMigrated", EmitDefaultValue = true)]
        public bool SubscriptionsMigrated { get; set; }

        /// <summary>
        /// Gets or Sets ShowLocalLoginOptionToTenantAdmins
        /// </summary>
        [DataMember(Name = "showLocalLoginOptionToTenantAdmins", EmitDefaultValue = true)]
        public bool ShowLocalLoginOptionToTenantAdmins { get; set; }

        /// <summary>
        /// Gets or Sets Subscriptions
        /// </summary>
        [DataMember(Name = "subscriptions", EmitDefaultValue = true)]
        public List<TenantApiTenantV1SubscriptionProfileResponse> Subscriptions { get; private set; }

        /// <summary>
        /// Returns false as Subscriptions should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeSubscriptions()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Domains
        /// </summary>
        [DataMember(Name = "domains", EmitDefaultValue = true)]
        public List<TenantApiTenantV1DomainProfileResponse> Domains { get; private set; }

        /// <summary>
        /// Returns false as Domains should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeDomains()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", EmitDefaultValue = true)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDateTime
        /// </summary>
        [DataMember(Name = "createdDateTime", EmitDefaultValue = true)]
        public string CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedBy
        /// </summary>
        [DataMember(Name = "lastModifiedBy", EmitDefaultValue = true)]
        public string LastModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedDateTime
        /// </summary>
        [DataMember(Name = "lastModifiedDateTime", EmitDefaultValue = true)]
        public string LastModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets IdentityProviders
        /// </summary>
        [DataMember(Name = "identityProviders", EmitDefaultValue = true)]
        public List<TenantApiTenantV1TenantIdentityProviders> IdentityProviders { get; private set; }

        /// <summary>
        /// Returns false as IdentityProviders should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIdentityProviders()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Onboarding
        /// </summary>
        [DataMember(Name = "onboarding", EmitDefaultValue = false)]
        public TenantApiTenantV1Onboarding Onboarding { get; set; }

        /// <summary>
        /// Gets or Sets Organizations
        /// </summary>
        [DataMember(Name = "organizations", EmitDefaultValue = true)]
        public List<TenantApiTenantV1Organization> Organizations { get; private set; }

        /// <summary>
        /// Returns false as Organizations should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOrganizations()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets OrganizationIdentifierHash
        /// </summary>
        [DataMember(Name = "organizationIdentifierHash", EmitDefaultValue = true)]
        public string OrganizationIdentifierHash { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TenantApiTenantV1TenantProfileResponse {\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  TenantType: ").Append(TenantType).Append("\n");
            sb.Append("  OrganizationIdentifier: ").Append(OrganizationIdentifier).Append("\n");
            sb.Append("  OrganizationName: ").Append(OrganizationName).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  TenantStatus: ").Append(TenantStatus).Append("\n");
            sb.Append("  IsDemo: ").Append(IsDemo).Append("\n");
            sb.Append("  EnforceMfa: ").Append(EnforceMfa).Append("\n");
            sb.Append("  SubscriptionsMigrated: ").Append(SubscriptionsMigrated).Append("\n");
            sb.Append("  ShowLocalLoginOptionToTenantAdmins: ").Append(ShowLocalLoginOptionToTenantAdmins).Append("\n");
            sb.Append("  Subscriptions: ").Append(Subscriptions).Append("\n");
            sb.Append("  Domains: ").Append(Domains).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  CreatedDateTime: ").Append(CreatedDateTime).Append("\n");
            sb.Append("  LastModifiedBy: ").Append(LastModifiedBy).Append("\n");
            sb.Append("  LastModifiedDateTime: ").Append(LastModifiedDateTime).Append("\n");
            sb.Append("  IdentityProviders: ").Append(IdentityProviders).Append("\n");
            sb.Append("  Onboarding: ").Append(Onboarding).Append("\n");
            sb.Append("  Organizations: ").Append(Organizations).Append("\n");
            sb.Append("  OrganizationIdentifierHash: ").Append(OrganizationIdentifierHash).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
